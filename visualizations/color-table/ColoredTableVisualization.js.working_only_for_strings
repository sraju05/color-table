// src/ColoredTableVisualization.js

import React, { useEffect, useState } from 'react';
import { NerdGraphQuery } from 'nr1';

const ColoredTableVisualization = ({ nrqlQuery, accountId, colorMapping }) => {
  const [data, setData] = useState(null);

  useEffect(() => {
    if (nrqlQuery && accountId) {
      const query = `
        {
          actor {
            account(id: ${accountId}) {
              nrql(query: "${nrqlQuery}") {
                results
              }
            }
          }
        }
      `;

      NerdGraphQuery.query({ query }).then(({ data }) => {
        if (data) {
          setData(data.actor.account.nrql.results);
        }
      });
    }
  }, [nrqlQuery, accountId]);

  const getCellColor = (value) => {
    const mapping = colorMapping.find(map => map.string.toLowerCase() === value.toLowerCase());
    return mapping ? mapping.color : 'white';
  };

  if (!nrqlQuery || !accountId) return <p>Please enter your NRQL query and Account ID</p>;
  if (!data) return <p>Loading data...</p>;

  const headers = data[0] ? Object.keys(data[0]) : [];

  return (
    <table>
      <thead>
        <tr>
          {headers.map((header) => (
            <th key={header}>{header}</th>
          ))}
        </tr>
      </thead>
      <tbody>
        {data.map((row, rowIndex) => (
          <tr key={rowIndex}>
            {headers.map((header, cellIndex) => (
              <td key={cellIndex} style={{ backgroundColor: getCellColor(row[header]) }}>
                {row[header]}
              </td>
            ))}
          </tr>
        ))}
      </tbody>
    </table>
  );
};

export default ColoredTableVisualization;
